% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/0_generics.R, R/espn_scoring.R,
%   R/flea_scoring.R, R/mfl_scoring.R, R/sleeper_scoring.R, R/template_scoring.R
\name{ff_scoring}
\alias{ff_scoring}
\alias{ff_scoring.espn_conn}
\alias{ff_scoring.flea_conn}
\alias{ff_scoring.mfl_conn}
\alias{ff_scoring.sleeper_conn}
\alias{ff_scoring.template_conn}
\title{Get League Scoring Settings}
\usage{
ff_scoring(conn)

\method{ff_scoring}{espn_conn}(conn)

\method{ff_scoring}{flea_conn}(conn)

\method{ff_scoring}{mfl_conn}(conn)

\method{ff_scoring}{sleeper_conn}(conn)

\method{ff_scoring}{template_conn}(conn)
}
\arguments{
\item{conn}{a conn object created by \code{ff_connect()}}
}
\value{
A tibble of league scoring rules for each position defined.
}
\description{
This function returns a dataframe with detailed scoring settings for each league - broken down by event, points, and (if available) position.
}
\section{Methods (by class)}{
\itemize{
\item \code{espn_conn}: ESPN: returns scoring settings in a flat table, override positions have their own scoring.

\item \code{flea_conn}: Fleaflicker: returns scoring settings in a flat table, one row per position per rule.

\item \code{mfl_conn}: MFL: returns scoring settings in a flat table, one row per position per rule.

\item \code{sleeper_conn}: Sleeper: returns scoring settings in a flat table, one row per position per rule.

\item \code{template_conn}: Template: returns MFL style scoring settings in a flat table, one row per position per rule.
}}

\examples{
\donttest{
try({ # try only shown here because sometimes CRAN checks are weird
  conn <- espn_connect(season = 2020, league_id = 899513)
  ff_scoring(conn)
}) # end try
}

\donttest{
try({ # try only shown here because sometimes CRAN checks are weird
  joe_conn <- ff_connect(platform = "fleaflicker", league_id = 312861, season = 2020)
  ff_scoring(joe_conn)
}) # end try
}

\donttest{
try({ # try only shown here because sometimes CRAN checks are weird
  ssb_conn <- ff_connect(platform = "mfl", league_id = 54040, season = 2020)
  ff_scoring(ssb_conn)
}) # end try
}

\donttest{
try({ # try only shown here because sometimes CRAN checks are weird
  jml_conn <- ff_connect(platform = "sleeper", league_id = "522458773317046272", season = 2020)
  ff_scoring(jml_conn)
}) # end try
}

\donttest{
template_ppr <- ff_template(scoring_type = "ppr")
ff_scoring(template_ppr)
}

}
\seealso{
\url{http://www03.myfantasyleague.com/2020/scoring_rules#rules}
}
